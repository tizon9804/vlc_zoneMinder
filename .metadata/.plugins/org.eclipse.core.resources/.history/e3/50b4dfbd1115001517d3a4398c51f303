package cctv.zoneminder.client;

import java.awt.Color;
import java.awt.GridLayout;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;

public class PanelReproductor extends JPanel {


	private static final String NOHAYCAMARAS = "No hay camaras";
	private ArrayList<EmbeddedMediaPlayerComponent> mediaCameras;
	private EmbeddedMediaPlayerComponent mediaPlayer;
	
	public PanelReproductor() {
		setSize(500, 500);		
		setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
		setBackground(Color.BLACK);				
	}

	public EmbeddedMediaPlayerComponent getMediaPlayer() {
		return mediaPlayer;
	}

	public void setMediaPlayer(EmbeddedMediaPlayerComponent mediaPlayer) {
		this.mediaPlayer = mediaPlayer;
	}
	
	public void run(ArrayList<Camara> camaras){
		removeAll();
		int tamano=camaras.size();
		System.out.println("tamaÃ±o de camaras"+ tamano);
		if(tamano>0){
		
		int grid=(int) Math.sqrt(tamano)+1;	
		setLayout(new GridLayout(grid,grid));
	
		
		mediaCameras = new ArrayList<EmbeddedMediaPlayerComponent>();
		
		for (int i = 0; i < camaras.size(); i++) {
			mediaPlayer = new EmbeddedMediaPlayerComponent();				
			mediaPlayer.setBounds(10,10,10,10);	
			mediaCameras.add(mediaPlayer);
			System.out.println("Agregando camara" + camaras.get(i).getPuerto());
			add(mediaPlayer);
			
		}
		
		
		for (int j = 0; j < mediaCameras.size(); j++) {
			
		EmbeddedMediaPlayerComponent camera = mediaCameras.get(j);
		Camara c= camaras.get(j);		
		System.out.println("reproduciendo camara "+ c.getRuta());
		camera.getMediaPlayer().playMedia(c.getRuta());
		System.out.println("espere..");
		updateUI();
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		
		}
		else{		
		JOptionPane.showMessageDialog(this, NOHAYCAMARAS);
		}
	}
	
	
	
	
}
